---
- name: Add rsync backport repo
  ansible.builtin.yum_repository:
    name: backports-rsync
    description: Backported rsync with extra features
    file: backports-rsync
    baseurl: http://repo.almalinux.org/backports/$releasever/$basearch/rsync/
    enabled: true
    gpgcheck: true
    gpgkey: https://repo.almalinux.org/almalinux/RPM-GPG-KEY-AlmaLinux-$releasever

- name: Update rsync # noqa package-latest
  ansible.builtin.package:
    name: rsync
    state: latest

- name: Install Caddy
  ansible.builtin.dnf:
    name: caddy
    state: present
  tags:
    - caddy

- name: Create Caddy log dir
  ansible.builtin.file:
    path: /var/log/caddy/
    owner: caddy
    group: caddy
    mode: "0700"
    state: directory
  tags:
    - caddy

- name: Set SELinux context for log directory
  community.general.sefcontext:
    target: '/var/log/caddy(/.*)?'
    setype: httpd_sys_rw_content_t
    state: present
  register: set_selinux_context
  tags:
    - caddy

# need to apply new contexts "now" to prevent potential issues in later tasks
- name: Apply new SELinux file context to filesystem # noqa no-handler no-changed-when
  ansible.builtin.command: restorecon -irv /var/log/caddy
  when: set_selinux_context.changed
  tags:
    - caddy

- name: Distribute /etc/caddy/Caddyfile
  ansible.builtin.template:
    src: etc/caddy/Caddyfile.j2
    dest: /etc/caddy/Caddyfile
    mode: "0600"
    owner: caddy
    group: caddy
  notify: Restart caddy
  tags:
    - caddy

- name: Allow http/https/ssh traffic through firewalld
  ansible.posix.firewalld:
    zone: public
    state: enabled
    permanent: true
    immediate: true
    service: "{{ item }}"
  loop:
    - http
    - https
    - ssh
    - rsyncd
  tags:
    - firewalld

- name: Allow rsyncd traffic through firewalld
  ansible.posix.firewalld:
    zone: public
    state: enabled
    permanent: true
    immediate: true
    service: "{{ item }}"
  loop:
    - rsyncd
  tags:
    - firewalld
  when: mirror_rsync_modules

- name: Create mirror directory
  ansible.builtin.file:
    path: "{{ mirror_path }}"
    state: directory
    mode: "0755"
  tags:
    - bootstrap_mirror

- name: Set SELinux context for mirror directory
  community.general.sefcontext:
    target: '{{ mirror_path }}(/.*)?'
    setype: public_content_t
    state: present
  register: set_selinux_context

# need to apply new contexts "now" to prevent potential issues in later tasks
- name: Apply new SELinux file context to filesystem # noqa no-handler no-changed-when
  ansible.builtin.command: restorecon -irv {{ mirror_path }}
  when: set_selinux_context.changed

- name: Create XFS filesystem for mirror data
  community.general.filesystem:
    state: present
    fstype: xfs
    force: false
    dev: "{{ mirror_dev_fs }}"
  tags:
    - bootstrap_mirror
  when: mirror_create_fs

- name: Add mirror FS to /etc/fstab
  ansible.posix.mount:
    path: "{{ mirror_path }}"
    src: "{{ mirror_dev }}"
    fstype: xfs
    state: mounted
  tags:
    - bootstrap_mirror
  when: mirror_create_fs

# only make sure the rsync *can* succeed, let the cron handle the full sync
- name: Bootstrap mirror # noqa command-instead-of-module
  ansible.builtin.command: "{{ item.bootstrap_command }}"
  args:
    creates: "{{ item.creates }}"
  changed_when: false
  loop: "{{ mirror_repos }}"
  tags:
    - bootstrap_mirror
  when: mirror_bootstrap_mirror
  ignore_errors: yes

- name: Setup cron for mirror
  ansible.builtin.cron:
    name: "{{ item.mirror_name }}"
    user: "{{ item.rsync_user | default('root') }}"
    minute: "{{ item.rsync_minute }}"
    hour: "{{ item.rsync_hour }}"
    job: "{{ item.rsync_command }}"
    cron_file: "{{ item.rsync_name }}"  # /etc/cron.d/almalinux_rsync
    state: "present"
  loop: "{{ mirror_repos }}"
  tags:
    - cron
  when: mirror_configure_crons

- name: Customize sysctl
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value | string }}"
    state: "{{ item.state | default('present') }}"
  loop: "{{ mirror_sysctl_performance }}"
  tags:
    - sysctl

- name: Certbot
  ansible.builtin.include_tasks: certbot.yml
  when: mirror_custom_ssl

- name: Start/Enable Caddy
  ansible.builtin.systemd:
    name: caddy.service
    state: started
    enabled: true
  tags:
    - caddy

- name: Install rsyncd
  ansible.builtin.package:
    name: rsync-daemon
    state: present
  when: mirror_rsync_modules

- name: Configure rsyncd
  ansible.builtin.template:
    src: rsyncd.conf.j2
    dest: /etc/rsyncd.conf
    mode: "0644"
  notify: Restart rsyncd
  when: mirror_rsync_modules

- name: Start rsyncd
  ansible.builtin.systemd_service:
    name: rsyncd
    enabled: true
    state: started
  when: mirror_rsync_modules

- name: User
  ansible.builtin.include_tasks: user.yml

- name: Extra tier0 setup
  ansible.builtin.include_tasks: tier0.yml
  when: mirror_tier0
