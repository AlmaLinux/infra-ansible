################################################################################
##  Automatically generated by Ansible.  Any changes made here will be lost.  ##
################################################################################

## Nginx virtual host configuration for Matomo

################################################################################
## Steps to regenerate this file:
##   1. Fetch it from upstream.
##     * `wget https://raw.githubusercontent.com/matomo-org/matomo-nginx/master/sites-available/matomo.conf`
##   2. Replace values with variables.
##   3. Delete the `include ssl.conf;` line.
##   4. Add HTTPS `if` statement.
##   5. Move `ssl` and HSTS lines to bottom of HTTPS `if` statement.
##   6. Add `matomo_web_config_phpfpm_mode` if statement.
################################################################################

server {
    listen [::]:80; # remove this if you don't want Matomo to be reachable from IPv6
    listen 80;

    server_name {{ matomo_domain }}; # list all domains Matomo should be reachable from
{% if matomo_protocol == "https" %}

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://{{ matomo_domain }}/$host$request_uri;
}
server {
    listen [::]:443 ssl http2; # remove this if you don't want Matomo to be reachable from IPv6
    listen 443 ssl http2;

    server_name {{ matomo_domain }}; # list all domains Matomo should be reachable from

    ## replace with your SSL certificate
{% if 'local' not in matomo_domain %}
    ssl_certificate /etc/letsencrypt/live/{{ matomo_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ matomo_domain }}/privkey.pem;
{% else %}
    ssl_certificate {{ matomo_path['cert_dir'] }}/{{ matomo_cert }};
    ssl_certificate_key {{ matomo_path['pkey_dir'] }}/{{ matomo_pkey }};
{% endif %}
    ## uncomment if you want to enable HSTS with 6 months cache
    ## ATTENTION: Be sure you know the implications of this change (you won't be able to disable HTTPS anymore)
    #add_header Strict-Transport-Security max-age=15768000 always;
{% endif %}

    access_log /var/log/nginx/matomo.access.log;
    error_log /var/log/nginx/matomo.error.log;

    add_header Referrer-Policy origin always; # make sure outgoing links don't show the URL to the Matomo instance
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    root {{ matomo_path['docroot_app'] }}; # replace with path to your matomo instance

    index index.php;

    ## only allow accessing the following php files
    location ~ ^/(index|matomo|piwik|js/index|plugins/HeatmapSessionRecording/configs.php).php {
        include fastcgi.conf; # if your Nginx setup doesn't come with a default fastcgi-php config, you can fetch it from https://github.com/nginx/nginx/blob/master/conf/fastcgi.conf
        fastcgi_param HTTP_PROXY ""; # prohibit httpoxy: https://httpoxy.org/
{% if matomo_php_socket_file is defined %}
        fastcgi_pass unix:{{ matomo_php_socket_file }}; #replace with the path to your PHP socket file
{% else %}
        fastcgi_pass 127.0.0.1:9000; # uncomment if you are using PHP via TCP sockets (e.g. Docker conatiner)
{% endif %}
    }

    ## deny access to all other .php files
    location ~* ^.+\.php$ {
        deny all;
        return 403;
    }

    ## serve all other files normally
    location / {
        try_files $uri $uri/ =404;
    }

    ## disable all access to the following directories
    location ~ /(config|tmp|core|lang) {
        deny all;
        return 403; # replace with 404 to not show these directories exist
    }
    location ~ /\.ht {
        deny  all;
        return 403;
    }

	location ~ js/container_.*_preview\.js$ {
        expires off;
        add_header Cache-Control 'private, no-cache, no-store';
	}

    location ~ \.(gif|ico|jpg|png|svg|js|css|htm|html|mp3|mp4|wav|ogg|avi|ttf|eot|woff|woff2|json)$ {
        allow all;
        ## Cache images,CSS,JS and webfonts for an hour
        ## Increasing the duration may improve the load-time, but may cause old files to show after an Matomo upgrade
        expires 1h;
        add_header Pragma public;
        add_header Cache-Control "public";
    }

    location ~ /(libs|vendor|plugins|misc/user) {
        deny all;
        return 403;
    }

    ## properly display textfiles in root directory
    location ~/(.*\.md|LEGALNOTICE|LICENSE) {
        default_type text/plain;
    }
}
# vim: filetype=nginx
