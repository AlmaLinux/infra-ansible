---
# HTTPS certificate getter
- name: Install python3-cryptography package for self-signed certs and keys
  ansible.builtin.dnf:
    name: python3-cryptography
    state: latest

- name: Run a separate role to install the HTTPS certificate
  include_role:
    name: geerlingguy.certbot
  vars:
    certbot_create_if_missing: true
    certbot_create_method: standalone
    certbot_admin_email: "{{ matomo_https_certificate_admin_email }}"
    certbot_create_standalone_stop_services:
      - nginx
    certbot_certs:
      - domains:
          - "{{ matomo_domain }}"
    # The Debian package already provides a cron job.
    certbot_auto_renew: false
    # This is necessary until https://github.com/geerlingguy/ansible-role-certbot/issues/105 gets fixed.
    ansible_become: yes
  when: 'matomo_protocol == "https" and "local" not in matomo_domain'

- name: Disable Nginx during certificate renewals
  ansible.builtin.lineinfile:
    path: "/etc/letsencrypt/renewal/{{ matomo_domain }}.conf"
    state: present
    line: "{{ item }}"
  with_items:
    - 'pre_hook = service nginx stop'
    - 'post_hook = service nginx start'
  become: yes
  when: 'matomo_protocol == "https" and "local" not in matomo_domain'

- name: Create configuration directory for Matomo
  file:
    path: "{{ matomo_path['config'] }}"
    state: directory
    mode: '0755'
  when: 'matomo_protocol == "https" and "local" in matomo_domain'

- name: Create the directory for private key for noggin web server
  ansible.builtin.file:
    dest: "{{ matomo_path['pkey_dir'] }}"
    state: directory
    mode: 0700
  when: matomo_protocol == "https" and "'local' in matomo_domain"

- name: Create private key (RSA, 4096 bits) for noggin
  community.crypto.openssl_privatekey:
    path: '{{matomo_path["pkey_dir"] }}/{{ matomo_pkey }}'
    type: RSA
    size: 4096
    state: present
    mode: 0700
  when: 'matomo_protocol == "https" and "local" in matomo_domain'

- name: Create simple self-signed certificate for noggin
  community.crypto.x509_certificate:
    path: '{{matomo_path["cert_dir"] }}/{{ matomo_cert }}'
    privatekey_path: '{{matomo_path["pkey_dir"] }}/{{ matomo_pkey }}'
    provider: selfsigned
    state: present
  when: 'matomo_protocol == "https" and "local" in matomo_domain'
...
